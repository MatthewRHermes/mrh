from pyscf import gto, scf, lib, mcscf
from mrh.my_pyscf.mcscf.lasscf_o0 import LASSCF
from mrh.my_pyscf import lassi
from mrh.my_pyscf import mcpdft
from c2h4n4_struct import structure as struct
from mrh.my_pyscf.lassi.spaces import all_single_excitations

'''
This example shows, how can one get the MCPDFT energies for the various rootspaces 
generated by the SA-LAS, or by the charge transfer states. However, this would not 
give MCPDFT energies corresponding to locally excited states in given rootspaces.
One should use the keyword DoPreLASSI=True.
'''

mol = struct(0, 0, '6-31g')
mol.verbose = lib.logger.INFO
mol.build()

mf = scf.RHF(mol).run()

las = LASSCF(mf, (3,3), ((2,1),(1,2)))
las = las.state_average([0.5,0.5],spins=[[1,-1],[-1,1]], smults=[[2,2],[2,2]], charges=[[0,0],[0,0]], wfnsyms=[[1,1],[1,1]])
guess_mo = las.sort_mo([16,18,22,23,24,26])
mo0 = las.localize_init_guess((list(range (5)), list(range (5,10))), guess_mo)
las.kernel(mo0)

# MC-PDFT energies for the LASSCF
mc = mcpdft.LASSCF(las, 'tPBE', DoPreLASSI=True)
mc.kernel()

# MC-PDFT energies for Charge transfer states.
las = lassi.spaces.all_single_excitations (las)
las.lasci_()

mc = mcpdft.LASSCF(las, 'tPBE', DoPreLASSI=True)
mc.kernel()

